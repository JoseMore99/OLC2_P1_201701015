Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    menorque
    resstruct

Grammar

Rule 0     S' -> INIT
Rule 1     INIT -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> PRINT puntycom
Rule 5     INSTRUCCION -> DECLARAR puntycom
Rule 6     INSTRUCCION -> ASIGNAR puntycom
Rule 7     INSTRUCCION -> INSTFUNC
Rule 8     INSTRUCCION -> LLAMARFUNC puntycom
Rule 9     INSTRUCCION -> INSTIF
Rule 10    PRINT -> resprint not pariz EXPRESION parder
Rule 11    PRINT -> resprint not pariz EXPRESION com LISTAEXP parder
Rule 12    DECLARAR -> reslet resmut id dospunt TIPOVAL igual EXPRESION
Rule 13    DECLARAR -> reslet resmut id igual EXPRESION
Rule 14    DECLARAR -> reslet id dospunt TIPOVAL igual EXPRESION
Rule 15    DECLARAR -> reslet id igual EXPRESION
Rule 16    ASIGNAR -> id igual EXPRESION
Rule 17    INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder
Rule 18    INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE
Rule 19    INSTELSE -> reselse INSTIF
Rule 20    INSTELSE -> reselse llaveiz BLOQUE llaveder
Rule 21    INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder
Rule 22    INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
Rule 23    INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
Rule 24    LLAMARFUNC -> id pariz parder
Rule 25    LLAMARFUNC -> id pariz LISTAEXP parder
Rule 26    BLOQUE -> INSTRUCCIONES
Rule 27    LISTAEXP -> LISTAEXP com EXPRESION
Rule 28    LISTAEXP -> EXPRESION
Rule 29    PARAMETROS -> PARAMETROS com id dospunt TIPOVAL
Rule 30    PARAMETROS -> id dospunt TIPOVAL
Rule 31    TIPOVAL -> resi64
Rule 32    TIPOVAL -> resf64
Rule 33    TIPOVAL -> resbool
Rule 34    TIPOVAL -> reschar
Rule 35    TIPOVAL -> restring
Rule 36    TIPOVAL -> str
Rule 37    EXPRESION -> EXPRESION mas EXPRESION
Rule 38    EXPRESION -> EXPRESION menos EXPRESION
Rule 39    EXPRESION -> EXPRESION por EXPRESION
Rule 40    EXPRESION -> EXPRESION modulo EXPRESION
Rule 41    EXPRESION -> EXPRESION divid EXPRESION
Rule 42    EXPRESION -> menos EXPRESION
Rule 43    EXPRESION -> pariz EXPRESION parder
Rule 44    EXPRESION -> entero
Rule 45    EXPRESION -> decimal
Rule 46    EXPRESION -> cadena
Rule 47    EXPRESION -> caracter
Rule 48    EXPRESION -> id
Rule 49    EXPRESION -> restrue
Rule 50    EXPRESION -> resfalse

Terminals, with rules where they appear

cadena               : 46
caracter             : 47
com                  : 11 27 29
decimal              : 45
divid                : 41
dospunt              : 12 14 29 30
entero               : 44
error                : 
id                   : 12 13 14 15 16 21 22 23 24 25 29 30 48
igual                : 12 13 14 15 16
llaveder             : 17 18 20 21 22 23
llaveiz              : 17 18 20 21 22 23
mas                  : 37
mayorque             : 23
menorque             : 
menos                : 23 38 42
modulo               : 40
not                  : 10 11
parder               : 10 11 21 22 23 24 25 43
pariz                : 10 11 21 22 23 24 25 43
por                  : 39
puntycom             : 4 5 6 8
resbool              : 33
reschar              : 34
reselse              : 19 20
resf64               : 32
resfalse             : 50
resfn                : 21 22 23
resi64               : 31
resif                : 17 18
reslet               : 12 13 14 15
resmut               : 12 13
resprint             : 10 11
resstruct            : 
restring             : 35
restrue              : 49
str                  : 36

Nonterminals, with rules where they appear

ASIGNAR              : 6
BLOQUE               : 17 18 20 21 22 23
DECLARAR             : 5
EXPRESION            : 10 11 12 13 14 15 16 17 18 27 28 37 37 38 38 39 39 40 40 41 41 42 43
INIT                 : 0
INSTELSE             : 18
INSTFUNC             : 7
INSTIF               : 9 19
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2 26
LISTAEXP             : 11 25 27
LLAMARFUNC           : 8
PARAMETROS           : 22 23 29
PRINT                : 4
TIPOVAL              : 12 14 23 29 30

Parsing method: LALR

state 0

    (0) S' -> . INIT
    (1) INIT -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    INIT                           shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 1

    (0) S' -> INIT .



state 2

    (1) INIT -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    $end            reduce using rule 1 (INIT -> INSTRUCCIONES .)
    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    INSTRUCCION                    shift and go to state 15
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    resprint        reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    reslet          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    id              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    resfn           reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    resif           reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    llaveder        reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> PRINT . puntycom

    puntycom        shift and go to state 16


state 5

    (5) INSTRUCCION -> DECLARAR . puntycom

    puntycom        shift and go to state 17


state 6

    (6) INSTRUCCION -> ASIGNAR . puntycom

    puntycom        shift and go to state 18


state 7

    (7) INSTRUCCION -> INSTFUNC .

    resprint        reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    reslet          reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    id              reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    resfn           reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    resif           reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    $end            reduce using rule 7 (INSTRUCCION -> INSTFUNC .)
    llaveder        reduce using rule 7 (INSTRUCCION -> INSTFUNC .)


state 8

    (8) INSTRUCCION -> LLAMARFUNC . puntycom

    puntycom        shift and go to state 19


state 9

    (9) INSTRUCCION -> INSTIF .

    resprint        reduce using rule 9 (INSTRUCCION -> INSTIF .)
    reslet          reduce using rule 9 (INSTRUCCION -> INSTIF .)
    id              reduce using rule 9 (INSTRUCCION -> INSTIF .)
    resfn           reduce using rule 9 (INSTRUCCION -> INSTIF .)
    resif           reduce using rule 9 (INSTRUCCION -> INSTIF .)
    $end            reduce using rule 9 (INSTRUCCION -> INSTIF .)
    llaveder        reduce using rule 9 (INSTRUCCION -> INSTIF .)


state 10

    (10) PRINT -> resprint . not pariz EXPRESION parder
    (11) PRINT -> resprint . not pariz EXPRESION com LISTAEXP parder

    not             shift and go to state 20


state 11

    (12) DECLARAR -> reslet . resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> reslet . resmut id igual EXPRESION
    (14) DECLARAR -> reslet . id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> reslet . id igual EXPRESION

    resmut          shift and go to state 21
    id              shift and go to state 22


state 12

    (16) ASIGNAR -> id . igual EXPRESION
    (24) LLAMARFUNC -> id . pariz parder
    (25) LLAMARFUNC -> id . pariz LISTAEXP parder

    igual           shift and go to state 23
    pariz           shift and go to state 24


state 13

    (21) INSTFUNC -> resfn . id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> resfn . id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> resfn . id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder

    id              shift and go to state 25


state 14

    (17) INSTIF -> resif . EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> resif . EXPRESION llaveiz BLOQUE llaveder INSTELSE
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 26

state 15

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    resprint        reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    reslet          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    id              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    resfn           reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    resif           reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    llaveder        reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 16

    (4) INSTRUCCION -> PRINT puntycom .

    resprint        reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    reslet          reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    id              reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    resfn           reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    resif           reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    $end            reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)
    llaveder        reduce using rule 4 (INSTRUCCION -> PRINT puntycom .)


state 17

    (5) INSTRUCCION -> DECLARAR puntycom .

    resprint        reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    reslet          reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    id              reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    resfn           reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    resif           reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    $end            reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)
    llaveder        reduce using rule 5 (INSTRUCCION -> DECLARAR puntycom .)


state 18

    (6) INSTRUCCION -> ASIGNAR puntycom .

    resprint        reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    reslet          reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    id              reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    resfn           reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    resif           reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    $end            reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)
    llaveder        reduce using rule 6 (INSTRUCCION -> ASIGNAR puntycom .)


state 19

    (8) INSTRUCCION -> LLAMARFUNC puntycom .

    resprint        reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    reslet          reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    id              reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    resfn           reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    resif           reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    $end            reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)
    llaveder        reduce using rule 8 (INSTRUCCION -> LLAMARFUNC puntycom .)


state 20

    (10) PRINT -> resprint not . pariz EXPRESION parder
    (11) PRINT -> resprint not . pariz EXPRESION com LISTAEXP parder

    pariz           shift and go to state 36


state 21

    (12) DECLARAR -> reslet resmut . id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> reslet resmut . id igual EXPRESION

    id              shift and go to state 37


state 22

    (14) DECLARAR -> reslet id . dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> reslet id . igual EXPRESION

    dospunt         shift and go to state 38
    igual           shift and go to state 39


state 23

    (16) ASIGNAR -> id igual . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 40

state 24

    (24) LLAMARFUNC -> id pariz . parder
    (25) LLAMARFUNC -> id pariz . LISTAEXP parder
    (27) LISTAEXP -> . LISTAEXP com EXPRESION
    (28) LISTAEXP -> . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    parder          shift and go to state 41
    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    LISTAEXP                       shift and go to state 42
    EXPRESION                      shift and go to state 43

state 25

    (21) INSTFUNC -> resfn id . pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> resfn id . pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> resfn id . pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder

    pariz           shift and go to state 44


state 26

    (17) INSTIF -> resif EXPRESION . llaveiz BLOQUE llaveder
    (18) INSTIF -> resif EXPRESION . llaveiz BLOQUE llaveder INSTELSE
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         shift and go to state 45
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 27

    (42) EXPRESION -> menos . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 51

state 28

    (43) EXPRESION -> pariz . EXPRESION parder
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 52

state 29

    (44) EXPRESION -> entero .

    llaveiz         reduce using rule 44 (EXPRESION -> entero .)
    mas             reduce using rule 44 (EXPRESION -> entero .)
    menos           reduce using rule 44 (EXPRESION -> entero .)
    por             reduce using rule 44 (EXPRESION -> entero .)
    modulo          reduce using rule 44 (EXPRESION -> entero .)
    divid           reduce using rule 44 (EXPRESION -> entero .)
    puntycom        reduce using rule 44 (EXPRESION -> entero .)
    parder          reduce using rule 44 (EXPRESION -> entero .)
    com             reduce using rule 44 (EXPRESION -> entero .)


state 30

    (45) EXPRESION -> decimal .

    llaveiz         reduce using rule 45 (EXPRESION -> decimal .)
    mas             reduce using rule 45 (EXPRESION -> decimal .)
    menos           reduce using rule 45 (EXPRESION -> decimal .)
    por             reduce using rule 45 (EXPRESION -> decimal .)
    modulo          reduce using rule 45 (EXPRESION -> decimal .)
    divid           reduce using rule 45 (EXPRESION -> decimal .)
    puntycom        reduce using rule 45 (EXPRESION -> decimal .)
    parder          reduce using rule 45 (EXPRESION -> decimal .)
    com             reduce using rule 45 (EXPRESION -> decimal .)


state 31

    (46) EXPRESION -> cadena .

    llaveiz         reduce using rule 46 (EXPRESION -> cadena .)
    mas             reduce using rule 46 (EXPRESION -> cadena .)
    menos           reduce using rule 46 (EXPRESION -> cadena .)
    por             reduce using rule 46 (EXPRESION -> cadena .)
    modulo          reduce using rule 46 (EXPRESION -> cadena .)
    divid           reduce using rule 46 (EXPRESION -> cadena .)
    puntycom        reduce using rule 46 (EXPRESION -> cadena .)
    parder          reduce using rule 46 (EXPRESION -> cadena .)
    com             reduce using rule 46 (EXPRESION -> cadena .)


state 32

    (47) EXPRESION -> caracter .

    llaveiz         reduce using rule 47 (EXPRESION -> caracter .)
    mas             reduce using rule 47 (EXPRESION -> caracter .)
    menos           reduce using rule 47 (EXPRESION -> caracter .)
    por             reduce using rule 47 (EXPRESION -> caracter .)
    modulo          reduce using rule 47 (EXPRESION -> caracter .)
    divid           reduce using rule 47 (EXPRESION -> caracter .)
    puntycom        reduce using rule 47 (EXPRESION -> caracter .)
    parder          reduce using rule 47 (EXPRESION -> caracter .)
    com             reduce using rule 47 (EXPRESION -> caracter .)


state 33

    (48) EXPRESION -> id .

    llaveiz         reduce using rule 48 (EXPRESION -> id .)
    mas             reduce using rule 48 (EXPRESION -> id .)
    menos           reduce using rule 48 (EXPRESION -> id .)
    por             reduce using rule 48 (EXPRESION -> id .)
    modulo          reduce using rule 48 (EXPRESION -> id .)
    divid           reduce using rule 48 (EXPRESION -> id .)
    puntycom        reduce using rule 48 (EXPRESION -> id .)
    parder          reduce using rule 48 (EXPRESION -> id .)
    com             reduce using rule 48 (EXPRESION -> id .)


state 34

    (49) EXPRESION -> restrue .

    llaveiz         reduce using rule 49 (EXPRESION -> restrue .)
    mas             reduce using rule 49 (EXPRESION -> restrue .)
    menos           reduce using rule 49 (EXPRESION -> restrue .)
    por             reduce using rule 49 (EXPRESION -> restrue .)
    modulo          reduce using rule 49 (EXPRESION -> restrue .)
    divid           reduce using rule 49 (EXPRESION -> restrue .)
    puntycom        reduce using rule 49 (EXPRESION -> restrue .)
    parder          reduce using rule 49 (EXPRESION -> restrue .)
    com             reduce using rule 49 (EXPRESION -> restrue .)


state 35

    (50) EXPRESION -> resfalse .

    llaveiz         reduce using rule 50 (EXPRESION -> resfalse .)
    mas             reduce using rule 50 (EXPRESION -> resfalse .)
    menos           reduce using rule 50 (EXPRESION -> resfalse .)
    por             reduce using rule 50 (EXPRESION -> resfalse .)
    modulo          reduce using rule 50 (EXPRESION -> resfalse .)
    divid           reduce using rule 50 (EXPRESION -> resfalse .)
    puntycom        reduce using rule 50 (EXPRESION -> resfalse .)
    parder          reduce using rule 50 (EXPRESION -> resfalse .)
    com             reduce using rule 50 (EXPRESION -> resfalse .)


state 36

    (10) PRINT -> resprint not pariz . EXPRESION parder
    (11) PRINT -> resprint not pariz . EXPRESION com LISTAEXP parder
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 53

state 37

    (12) DECLARAR -> reslet resmut id . dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> reslet resmut id . igual EXPRESION

    dospunt         shift and go to state 54
    igual           shift and go to state 55


state 38

    (14) DECLARAR -> reslet id dospunt . TIPOVAL igual EXPRESION
    (31) TIPOVAL -> . resi64
    (32) TIPOVAL -> . resf64
    (33) TIPOVAL -> . resbool
    (34) TIPOVAL -> . reschar
    (35) TIPOVAL -> . restring
    (36) TIPOVAL -> . str

    resi64          shift and go to state 57
    resf64          shift and go to state 58
    resbool         shift and go to state 59
    reschar         shift and go to state 60
    restring        shift and go to state 61
    str             shift and go to state 62

    TIPOVAL                        shift and go to state 56

state 39

    (15) DECLARAR -> reslet id igual . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 63

state 40

    (16) ASIGNAR -> id igual EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    puntycom        reduce using rule 16 (ASIGNAR -> id igual EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 41

    (24) LLAMARFUNC -> id pariz parder .

    puntycom        reduce using rule 24 (LLAMARFUNC -> id pariz parder .)


state 42

    (25) LLAMARFUNC -> id pariz LISTAEXP . parder
    (27) LISTAEXP -> LISTAEXP . com EXPRESION

    parder          shift and go to state 64
    com             shift and go to state 65


state 43

    (28) LISTAEXP -> EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    parder          reduce using rule 28 (LISTAEXP -> EXPRESION .)
    com             reduce using rule 28 (LISTAEXP -> EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 44

    (21) INSTFUNC -> resfn id pariz . parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> resfn id pariz . PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> resfn id pariz . PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (29) PARAMETROS -> . PARAMETROS com id dospunt TIPOVAL
    (30) PARAMETROS -> . id dospunt TIPOVAL

    parder          shift and go to state 67
    id              shift and go to state 66

    PARAMETROS                     shift and go to state 68

state 45

    (17) INSTIF -> resif EXPRESION llaveiz . BLOQUE llaveder
    (18) INSTIF -> resif EXPRESION llaveiz . BLOQUE llaveder INSTELSE
    (26) BLOQUE -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    BLOQUE                         shift and go to state 69
    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 46

    (37) EXPRESION -> EXPRESION mas . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 71

state 47

    (38) EXPRESION -> EXPRESION menos . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 72

state 48

    (39) EXPRESION -> EXPRESION por . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 73

state 49

    (40) EXPRESION -> EXPRESION modulo . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 74

state 50

    (41) EXPRESION -> EXPRESION divid . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 75

state 51

    (42) EXPRESION -> menos EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    mas             reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    divid           reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    puntycom        reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    parder          reduce using rule 42 (EXPRESION -> menos EXPRESION .)
    com             reduce using rule 42 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]
  ! por             [ shift and go to state 48 ]
  ! modulo          [ shift and go to state 49 ]
  ! divid           [ shift and go to state 50 ]


state 52

    (43) EXPRESION -> pariz EXPRESION . parder
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    parder          shift and go to state 76
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 53

    (10) PRINT -> resprint not pariz EXPRESION . parder
    (11) PRINT -> resprint not pariz EXPRESION . com LISTAEXP parder
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    parder          shift and go to state 77
    com             shift and go to state 78
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 54

    (12) DECLARAR -> reslet resmut id dospunt . TIPOVAL igual EXPRESION
    (31) TIPOVAL -> . resi64
    (32) TIPOVAL -> . resf64
    (33) TIPOVAL -> . resbool
    (34) TIPOVAL -> . reschar
    (35) TIPOVAL -> . restring
    (36) TIPOVAL -> . str

    resi64          shift and go to state 57
    resf64          shift and go to state 58
    resbool         shift and go to state 59
    reschar         shift and go to state 60
    restring        shift and go to state 61
    str             shift and go to state 62

    TIPOVAL                        shift and go to state 79

state 55

    (13) DECLARAR -> reslet resmut id igual . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 80

state 56

    (14) DECLARAR -> reslet id dospunt TIPOVAL . igual EXPRESION

    igual           shift and go to state 81


state 57

    (31) TIPOVAL -> resi64 .

    igual           reduce using rule 31 (TIPOVAL -> resi64 .)
    parder          reduce using rule 31 (TIPOVAL -> resi64 .)
    com             reduce using rule 31 (TIPOVAL -> resi64 .)
    llaveiz         reduce using rule 31 (TIPOVAL -> resi64 .)


state 58

    (32) TIPOVAL -> resf64 .

    igual           reduce using rule 32 (TIPOVAL -> resf64 .)
    parder          reduce using rule 32 (TIPOVAL -> resf64 .)
    com             reduce using rule 32 (TIPOVAL -> resf64 .)
    llaveiz         reduce using rule 32 (TIPOVAL -> resf64 .)


state 59

    (33) TIPOVAL -> resbool .

    igual           reduce using rule 33 (TIPOVAL -> resbool .)
    parder          reduce using rule 33 (TIPOVAL -> resbool .)
    com             reduce using rule 33 (TIPOVAL -> resbool .)
    llaveiz         reduce using rule 33 (TIPOVAL -> resbool .)


state 60

    (34) TIPOVAL -> reschar .

    igual           reduce using rule 34 (TIPOVAL -> reschar .)
    parder          reduce using rule 34 (TIPOVAL -> reschar .)
    com             reduce using rule 34 (TIPOVAL -> reschar .)
    llaveiz         reduce using rule 34 (TIPOVAL -> reschar .)


state 61

    (35) TIPOVAL -> restring .

    igual           reduce using rule 35 (TIPOVAL -> restring .)
    parder          reduce using rule 35 (TIPOVAL -> restring .)
    com             reduce using rule 35 (TIPOVAL -> restring .)
    llaveiz         reduce using rule 35 (TIPOVAL -> restring .)


state 62

    (36) TIPOVAL -> str .

    igual           reduce using rule 36 (TIPOVAL -> str .)
    parder          reduce using rule 36 (TIPOVAL -> str .)
    com             reduce using rule 36 (TIPOVAL -> str .)
    llaveiz         reduce using rule 36 (TIPOVAL -> str .)


state 63

    (15) DECLARAR -> reslet id igual EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    puntycom        reduce using rule 15 (DECLARAR -> reslet id igual EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 64

    (25) LLAMARFUNC -> id pariz LISTAEXP parder .

    puntycom        reduce using rule 25 (LLAMARFUNC -> id pariz LISTAEXP parder .)


state 65

    (27) LISTAEXP -> LISTAEXP com . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 82

state 66

    (30) PARAMETROS -> id . dospunt TIPOVAL

    dospunt         shift and go to state 83


state 67

    (21) INSTFUNC -> resfn id pariz parder . llaveiz BLOQUE llaveder

    llaveiz         shift and go to state 84


state 68

    (22) INSTFUNC -> resfn id pariz PARAMETROS . parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> resfn id pariz PARAMETROS . parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (29) PARAMETROS -> PARAMETROS . com id dospunt TIPOVAL

    parder          shift and go to state 85
    com             shift and go to state 86


state 69

    (17) INSTIF -> resif EXPRESION llaveiz BLOQUE . llaveder
    (18) INSTIF -> resif EXPRESION llaveiz BLOQUE . llaveder INSTELSE

    llaveder        shift and go to state 87


state 70

    (26) BLOQUE -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    llaveder        reduce using rule 26 (BLOQUE -> INSTRUCCIONES .)
    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    INSTRUCCION                    shift and go to state 15
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 71

    (37) EXPRESION -> EXPRESION mas EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    mas             reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    puntycom        reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    parder          reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    com             reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50

  ! por             [ reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! divid           [ reduce using rule 37 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]


state 72

    (38) EXPRESION -> EXPRESION menos EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    mas             reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    puntycom        reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    parder          reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    com             reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50

  ! por             [ reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! divid           [ reduce using rule 38 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]


state 73

    (39) EXPRESION -> EXPRESION por EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    mas             reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    divid           reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    puntycom        reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    parder          reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)
    com             reduce using rule 39 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]
  ! por             [ shift and go to state 48 ]
  ! modulo          [ shift and go to state 49 ]
  ! divid           [ shift and go to state 50 ]


state 74

    (40) EXPRESION -> EXPRESION modulo EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mas             reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    divid           reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    puntycom        reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    parder          reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)
    com             reduce using rule 40 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]
  ! por             [ shift and go to state 48 ]
  ! modulo          [ shift and go to state 49 ]
  ! divid           [ shift and go to state 50 ]


state 75

    (41) EXPRESION -> EXPRESION divid EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    llaveiz         reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    mas             reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    menos           reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    por             reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    modulo          reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    divid           reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    puntycom        reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    parder          reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)
    com             reduce using rule 41 (EXPRESION -> EXPRESION divid EXPRESION .)

  ! mas             [ shift and go to state 46 ]
  ! menos           [ shift and go to state 47 ]
  ! por             [ shift and go to state 48 ]
  ! modulo          [ shift and go to state 49 ]
  ! divid           [ shift and go to state 50 ]


state 76

    (43) EXPRESION -> pariz EXPRESION parder .

    llaveiz         reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    mas             reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    menos           reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    por             reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    modulo          reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    divid           reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    puntycom        reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    parder          reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)
    com             reduce using rule 43 (EXPRESION -> pariz EXPRESION parder .)


state 77

    (10) PRINT -> resprint not pariz EXPRESION parder .

    puntycom        reduce using rule 10 (PRINT -> resprint not pariz EXPRESION parder .)


state 78

    (11) PRINT -> resprint not pariz EXPRESION com . LISTAEXP parder
    (27) LISTAEXP -> . LISTAEXP com EXPRESION
    (28) LISTAEXP -> . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 43
    LISTAEXP                       shift and go to state 88

state 79

    (12) DECLARAR -> reslet resmut id dospunt TIPOVAL . igual EXPRESION

    igual           shift and go to state 89


state 80

    (13) DECLARAR -> reslet resmut id igual EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    puntycom        reduce using rule 13 (DECLARAR -> reslet resmut id igual EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 81

    (14) DECLARAR -> reslet id dospunt TIPOVAL igual . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 90

state 82

    (27) LISTAEXP -> LISTAEXP com EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    parder          reduce using rule 27 (LISTAEXP -> LISTAEXP com EXPRESION .)
    com             reduce using rule 27 (LISTAEXP -> LISTAEXP com EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 83

    (30) PARAMETROS -> id dospunt . TIPOVAL
    (31) TIPOVAL -> . resi64
    (32) TIPOVAL -> . resf64
    (33) TIPOVAL -> . resbool
    (34) TIPOVAL -> . reschar
    (35) TIPOVAL -> . restring
    (36) TIPOVAL -> . str

    resi64          shift and go to state 57
    resf64          shift and go to state 58
    resbool         shift and go to state 59
    reschar         shift and go to state 60
    restring        shift and go to state 61
    str             shift and go to state 62

    TIPOVAL                        shift and go to state 91

state 84

    (21) INSTFUNC -> resfn id pariz parder llaveiz . BLOQUE llaveder
    (26) BLOQUE -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    BLOQUE                         shift and go to state 92
    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 85

    (22) INSTFUNC -> resfn id pariz PARAMETROS parder . llaveiz BLOQUE llaveder
    (23) INSTFUNC -> resfn id pariz PARAMETROS parder . menos mayorque TIPOVAL llaveiz BLOQUE llaveder

    llaveiz         shift and go to state 93
    menos           shift and go to state 94


state 86

    (29) PARAMETROS -> PARAMETROS com . id dospunt TIPOVAL

    id              shift and go to state 95


state 87

    (17) INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .
    (18) INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder . INSTELSE
    (19) INSTELSE -> . reselse INSTIF
    (20) INSTELSE -> . reselse llaveiz BLOQUE llaveder

    resprint        reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    reslet          reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    id              reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    resfn           reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    resif           reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    $end            reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    llaveder        reduce using rule 17 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder .)
    reselse         shift and go to state 97

    INSTELSE                       shift and go to state 96

state 88

    (11) PRINT -> resprint not pariz EXPRESION com LISTAEXP . parder
    (27) LISTAEXP -> LISTAEXP . com EXPRESION

    parder          shift and go to state 98
    com             shift and go to state 65


state 89

    (12) DECLARAR -> reslet resmut id dospunt TIPOVAL igual . EXPRESION
    (37) EXPRESION -> . EXPRESION mas EXPRESION
    (38) EXPRESION -> . EXPRESION menos EXPRESION
    (39) EXPRESION -> . EXPRESION por EXPRESION
    (40) EXPRESION -> . EXPRESION modulo EXPRESION
    (41) EXPRESION -> . EXPRESION divid EXPRESION
    (42) EXPRESION -> . menos EXPRESION
    (43) EXPRESION -> . pariz EXPRESION parder
    (44) EXPRESION -> . entero
    (45) EXPRESION -> . decimal
    (46) EXPRESION -> . cadena
    (47) EXPRESION -> . caracter
    (48) EXPRESION -> . id
    (49) EXPRESION -> . restrue
    (50) EXPRESION -> . resfalse

    menos           shift and go to state 27
    pariz           shift and go to state 28
    entero          shift and go to state 29
    decimal         shift and go to state 30
    cadena          shift and go to state 31
    caracter        shift and go to state 32
    id              shift and go to state 33
    restrue         shift and go to state 34
    resfalse        shift and go to state 35

    EXPRESION                      shift and go to state 99

state 90

    (14) DECLARAR -> reslet id dospunt TIPOVAL igual EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    puntycom        reduce using rule 14 (DECLARAR -> reslet id dospunt TIPOVAL igual EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 91

    (30) PARAMETROS -> id dospunt TIPOVAL .

    parder          reduce using rule 30 (PARAMETROS -> id dospunt TIPOVAL .)
    com             reduce using rule 30 (PARAMETROS -> id dospunt TIPOVAL .)


state 92

    (21) INSTFUNC -> resfn id pariz parder llaveiz BLOQUE . llaveder

    llaveder        shift and go to state 100


state 93

    (22) INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz . BLOQUE llaveder
    (26) BLOQUE -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    BLOQUE                         shift and go to state 101
    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 94

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos . mayorque TIPOVAL llaveiz BLOQUE llaveder

    mayorque        shift and go to state 102


state 95

    (29) PARAMETROS -> PARAMETROS com id . dospunt TIPOVAL

    dospunt         shift and go to state 103


state 96

    (18) INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .

    resprint        reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    reslet          reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    id              reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    resfn           reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    resif           reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    $end            reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)
    llaveder        reduce using rule 18 (INSTIF -> resif EXPRESION llaveiz BLOQUE llaveder INSTELSE .)


state 97

    (19) INSTELSE -> reselse . INSTIF
    (20) INSTELSE -> reselse . llaveiz BLOQUE llaveder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    llaveiz         shift and go to state 105
    resif           shift and go to state 14

    INSTIF                         shift and go to state 104

state 98

    (11) PRINT -> resprint not pariz EXPRESION com LISTAEXP parder .

    puntycom        reduce using rule 11 (PRINT -> resprint not pariz EXPRESION com LISTAEXP parder .)


state 99

    (12) DECLARAR -> reslet resmut id dospunt TIPOVAL igual EXPRESION .
    (37) EXPRESION -> EXPRESION . mas EXPRESION
    (38) EXPRESION -> EXPRESION . menos EXPRESION
    (39) EXPRESION -> EXPRESION . por EXPRESION
    (40) EXPRESION -> EXPRESION . modulo EXPRESION
    (41) EXPRESION -> EXPRESION . divid EXPRESION

    puntycom        reduce using rule 12 (DECLARAR -> reslet resmut id dospunt TIPOVAL igual EXPRESION .)
    mas             shift and go to state 46
    menos           shift and go to state 47
    por             shift and go to state 48
    modulo          shift and go to state 49
    divid           shift and go to state 50


state 100

    (21) INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .

    resprint        reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    reslet          reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    id              reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    resfn           reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    resif           reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    $end            reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)
    llaveder        reduce using rule 21 (INSTFUNC -> resfn id pariz parder llaveiz BLOQUE llaveder .)


state 101

    (22) INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE . llaveder

    llaveder        shift and go to state 106


state 102

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque . TIPOVAL llaveiz BLOQUE llaveder
    (31) TIPOVAL -> . resi64
    (32) TIPOVAL -> . resf64
    (33) TIPOVAL -> . resbool
    (34) TIPOVAL -> . reschar
    (35) TIPOVAL -> . restring
    (36) TIPOVAL -> . str

    resi64          shift and go to state 57
    resf64          shift and go to state 58
    resbool         shift and go to state 59
    reschar         shift and go to state 60
    restring        shift and go to state 61
    str             shift and go to state 62

    TIPOVAL                        shift and go to state 107

state 103

    (29) PARAMETROS -> PARAMETROS com id dospunt . TIPOVAL
    (31) TIPOVAL -> . resi64
    (32) TIPOVAL -> . resf64
    (33) TIPOVAL -> . resbool
    (34) TIPOVAL -> . reschar
    (35) TIPOVAL -> . restring
    (36) TIPOVAL -> . str

    resi64          shift and go to state 57
    resf64          shift and go to state 58
    resbool         shift and go to state 59
    reschar         shift and go to state 60
    restring        shift and go to state 61
    str             shift and go to state 62

    TIPOVAL                        shift and go to state 108

state 104

    (19) INSTELSE -> reselse INSTIF .

    resprint        reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    reslet          reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    id              reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    resfn           reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    resif           reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    $end            reduce using rule 19 (INSTELSE -> reselse INSTIF .)
    llaveder        reduce using rule 19 (INSTELSE -> reselse INSTIF .)


state 105

    (20) INSTELSE -> reselse llaveiz . BLOQUE llaveder
    (26) BLOQUE -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    BLOQUE                         shift and go to state 109
    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 106

    (22) INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .

    resprint        reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    reslet          reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    id              reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    resfn           reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    resif           reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    $end            reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)
    llaveder        reduce using rule 22 (INSTFUNC -> resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder .)


state 107

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL . llaveiz BLOQUE llaveder

    llaveiz         shift and go to state 110


state 108

    (29) PARAMETROS -> PARAMETROS com id dospunt TIPOVAL .

    parder          reduce using rule 29 (PARAMETROS -> PARAMETROS com id dospunt TIPOVAL .)
    com             reduce using rule 29 (PARAMETROS -> PARAMETROS com id dospunt TIPOVAL .)


state 109

    (20) INSTELSE -> reselse llaveiz BLOQUE . llaveder

    llaveder        shift and go to state 111


state 110

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz . BLOQUE llaveder
    (26) BLOQUE -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . PRINT puntycom
    (5) INSTRUCCION -> . DECLARAR puntycom
    (6) INSTRUCCION -> . ASIGNAR puntycom
    (7) INSTRUCCION -> . INSTFUNC
    (8) INSTRUCCION -> . LLAMARFUNC puntycom
    (9) INSTRUCCION -> . INSTIF
    (10) PRINT -> . resprint not pariz EXPRESION parder
    (11) PRINT -> . resprint not pariz EXPRESION com LISTAEXP parder
    (12) DECLARAR -> . reslet resmut id dospunt TIPOVAL igual EXPRESION
    (13) DECLARAR -> . reslet resmut id igual EXPRESION
    (14) DECLARAR -> . reslet id dospunt TIPOVAL igual EXPRESION
    (15) DECLARAR -> . reslet id igual EXPRESION
    (16) ASIGNAR -> . id igual EXPRESION
    (21) INSTFUNC -> . resfn id pariz parder llaveiz BLOQUE llaveder
    (22) INSTFUNC -> . resfn id pariz PARAMETROS parder llaveiz BLOQUE llaveder
    (23) INSTFUNC -> . resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder
    (24) LLAMARFUNC -> . id pariz parder
    (25) LLAMARFUNC -> . id pariz LISTAEXP parder
    (17) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder
    (18) INSTIF -> . resif EXPRESION llaveiz BLOQUE llaveder INSTELSE

    resprint        shift and go to state 10
    reslet          shift and go to state 11
    id              shift and go to state 12
    resfn           shift and go to state 13
    resif           shift and go to state 14

    BLOQUE                         shift and go to state 112
    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 3
    PRINT                          shift and go to state 4
    DECLARAR                       shift and go to state 5
    ASIGNAR                        shift and go to state 6
    INSTFUNC                       shift and go to state 7
    LLAMARFUNC                     shift and go to state 8
    INSTIF                         shift and go to state 9

state 111

    (20) INSTELSE -> reselse llaveiz BLOQUE llaveder .

    resprint        reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    reslet          reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    id              reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    resfn           reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    resif           reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    $end            reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)
    llaveder        reduce using rule 20 (INSTELSE -> reselse llaveiz BLOQUE llaveder .)


state 112

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE . llaveder

    llaveder        shift and go to state 113


state 113

    (23) INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .

    resprint        reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    reslet          reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    id              reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    resfn           reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    resif           reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    $end            reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)
    llaveder        reduce using rule 23 (INSTFUNC -> resfn id pariz PARAMETROS parder menos mayorque TIPOVAL llaveiz BLOQUE llaveder .)

