
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftmasmenosleftpordividrightUmenosdecimal divid entero mas menos parder pariz por puntycomINSTRUCCIONES    : INSTRUCCION INSTRUCCIONES\n                        | INSTRUCCION INSTRUCCION :  EXPRESION  puntycomEXPRESION : EXPRESION mas EXPRESION\n                  | EXPRESION menos EXPRESION\n                  | EXPRESION por EXPRESION\n                  | EXPRESION divid EXPRESIONEXPRESION : menos EXPRESION %prec UmenosEXPRESION : pariz EXPRESION parderEXPRESION    : entero\n                    | decimal'
    
_lr_action_items = {'menos':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,],[4,4,11,4,4,-10,-11,-3,4,4,4,4,-8,11,-4,-5,-6,-7,-9,]),'pariz':([0,2,4,5,9,10,11,12,13,],[5,5,5,5,-3,5,5,5,5,]),'entero':([0,2,4,5,9,10,11,12,13,],[6,6,6,6,-3,6,6,6,6,]),'decimal':([0,2,4,5,9,10,11,12,13,],[7,7,7,7,-3,7,7,7,7,]),'$end':([1,2,8,9,],[0,-2,-1,-3,]),'puntycom':([3,6,7,14,16,17,18,19,20,],[9,-10,-11,-8,-4,-5,-6,-7,-9,]),'mas':([3,6,7,14,15,16,17,18,19,20,],[10,-10,-11,-8,10,-4,-5,-6,-7,-9,]),'por':([3,6,7,14,15,16,17,18,19,20,],[12,-10,-11,-8,12,12,12,-6,-7,-9,]),'divid':([3,6,7,14,15,16,17,18,19,20,],[13,-10,-11,-8,13,13,13,-6,-7,-9,]),'parder':([6,7,14,15,16,17,18,19,20,],[-10,-11,-8,20,-4,-5,-6,-7,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INSTRUCCIONES':([0,2,],[1,8,]),'INSTRUCCION':([0,2,],[2,2,]),'EXPRESION':([0,2,4,5,10,11,12,13,],[3,3,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INSTRUCCIONES","S'",1,None,None,None),
  ('INSTRUCCIONES -> INSTRUCCION INSTRUCCIONES','INSTRUCCIONES',2,'p_instrucciones_lista','gramatica.py',69),
  ('INSTRUCCIONES -> INSTRUCCION','INSTRUCCIONES',1,'p_instrucciones_lista','gramatica.py',70),
  ('INSTRUCCION -> EXPRESION puntycom','INSTRUCCION',2,'p_instrucciones_evaluar','gramatica.py',73),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_binaria','gramatica.py',77),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_binaria','gramatica.py',78),
  ('EXPRESION -> EXPRESION por EXPRESION','EXPRESION',3,'p_expresion_binaria','gramatica.py',79),
  ('EXPRESION -> EXPRESION divid EXPRESION','EXPRESION',3,'p_expresion_binaria','gramatica.py',80),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion_unaria','gramatica.py',87),
  ('EXPRESION -> pariz EXPRESION parder','EXPRESION',3,'p_expresion_agrupacion','gramatica.py',91),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion_number','gramatica.py',95),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion_number','gramatica.py',96),
]
